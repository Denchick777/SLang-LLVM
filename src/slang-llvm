#!/bin/bash

usage() { echo "Usage: ${0} [-hj] [-o <target_name>] <source_name>" 1>&2; exit 1; }

while getopts ":o:hjv" arg; do
    case "${arg}" in
        o)
            out_path="${OPTARG}"
            ;;
        j)
            json="true"
            ;;
        h | *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

if [ -z "${1}" ]; then
    usage
fi

in_path="${1}"

if [ -z "${out_path}" ]; then
    out_path="${in_path}.out"
fi

obj_path="app.o"  # TODO: replace with option

"./slang_parser/SLang Compiler" /json "${in_path}" \
    || { echo "Parsing failed"; exit 1; }

./slang_jtll "${in_path}.json" \
    || { echo "Code generation failed"; exit 1; }

if [ -z "${json}" ]; then
    rm "${in_path}.json" \
        || echo "JSON file remove failed"
fi

#ld -o "${out_path}" -dynamic-linker /lib/ld-linux.so.2 /usr/lib/crt1.o /usr/lib/crti.o -lc "${obj_path}" /usr/lib/crtn.o
clang -o "${out_path}" "${obj_path}" \
    || { echo "Linkage failed"; exit 1; }

rm "${obj_path}" \
    || echo "Object file remove failed"
